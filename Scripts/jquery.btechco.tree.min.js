var c = jQuery; $treedatastructure = { v: 1, u: 2, A: 3, z: 4 }; var d = { g: null, dataset: null, n: $treedatastructure.w, c: "ui-icon-folder-collapsed", e: "ui-icon-folder-open", p: "ui-icon-document", j: !1, k: "ui-state-highlight", m: "ui-icon-plusthick", r: "ui-icon-minusthick", s: !1, t: !1, q: "Are you sure you want to remove this node?" }, m = d;
c.C.B = function (f) {
    function g(a, b) { for (var e = 0; e < a.length; e++) if (a[e].id == b.f) { 0 == a[e].a.length && (a[e].a = []); a[e].a.push(b); break } else a[e].a instanceof Object && g(a[e].a, b) } function j(a) {
        b = 0 == b.length ? b + "<ul style='list-style-type:none;'>" : b + "<ul style='list-style-type:none; display:none;'>"; c(a).d(function () {
            var a = 20; b += "<li nodeid='" + this.id + "'>"; null != this.a && 0 < this.a.length ? (b += "<span class='ui-icon ", b = m.j ? b + m.e : b + m.c, b += "' data-action='nav_items' style='position:absolute; margin-top:1px;'></span>") :
            b += "<span class='ui-icon " + m.p + "' data-action='nav_item' style='position:absolute; margin-top:1px;'></span>"; m.s && (a += 20, b += "<span class='ui-icon " + m.m + "' data-action='add' style='position:absolute;  margin-top:1px;margin-left:20px;'></span>"); m.t && (a += 20, b += "<span class='ui-icon " + m.r + "' data-action='remove' style='position:absolute; margin-top:1px;margin-left:40px;'></span>"); this.href && (b += "<a href='" + this.href + "'>"); b += "<span style='margin-left:" + a + "px;' data-action='text'>" + this.name + "</span>";
            this.href && (b += "</a>"); b += "</li>"; null != this.a && 0 < this.a.length && j(this.a)
        }); b += "</ul>"
    } function k(a) { c(a).parent().next("ul").toggle() } function l(a) { c(a).o(m.e) ? (c(a).l(m.e), c(a).i(m.c)) : c(a).o(m.c) && (c(a).l(m.c), c(a).i(m.e)) } function h(a, b) { c("#" + m.g + " ul li span[data-action='text']").l(m.k); b && c(a).parent().find("span[data-action='text']").i(m.k) } function n(a, b) { c(a).d(function () { if (this.id == b) return a.splice(this, 1), !1; 0 < this.a.length && j(this.a) }) } m = c.extend({}, d, f); var e = [], b = ""; switch (m.n) {
        case 1: c(m.dataset[0].root).d(function () {
            var a =
            { id: this.id, name: this.name, f: this.f, href: this.href, a: [] }; 0 == e.length ? e.push(a) : g(e, a)
        }); break; case 2: e = m.dataset[0].root; break; case 3: c(m.dataset).find("node").d(function () { var a = { id: this.id, name: c(this).b("name"), f: c(this).b("parentId"), href: c(this).b("href"), a: [] }; 0 == e.length ? e.push(a) : g(e, a) }); break; case 4: c(m.dataset).find("node").d(function () {
            var a = { id: c(this).b("id"), name: c(this).b("name"), f: null == c(this).parent().b("id") ? 0 : c(this).parent().b("id"), href: c(this).b("href"), a: [] }; 0 == e.length ? e.push(a) :
            g(e, a)
        }); break; default: e = m.dataset[0].root
    } j(e); c("#" + m.g).append(b); f = c("#" + m.g + "> ul > li > span:nth-child(1)"); l(f); k(f); m.j && (l(f), k(f)); c("li").h("span[data-action='nav_items']", "click", function () { l(this); k(this) }); c("li").h("span[data-action='text']", "click", function () { h(this, !0) }); c("li").h("span[data-action='add']", "click", function () { h(this, !0) }); c("li").h("span[data-action='remove']", "click", function () {
        console.log(e); h(this, !0); if (confirm(m.q)) {
            var a = c(this).parent().b("nodeid"); n.call(e,
            a)
        } else h(this, !1); console.log(e)
    })
};
