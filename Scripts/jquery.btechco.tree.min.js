var b = null, c = !1; function d() { return function () { } } var e = jQuery; $treedatatype = { w: 1, O: 2 }; $treedataformat = { M: 1, v: 2 };
var g = { s: b, url: b, async: c, dataset: b, u: $treedatatype.w, t: $treedataformat.v, l: "ui-icon-folder-collapsed", m: "ui-icon-folder-open", B: "ui-icon-document", r: c, Q: "ui-state-highlight", A: "ui-icon-plusthick", C: "ui-icon-minusthick", I: c, H: c, J: c, S: "Are you sure you want to remove this node?", la: d(), ca: d(), ga: d(), ea: d(), fa: d(), $: d(), W: d(), ja: d(), ia: d(), aa: d(), X: d(), ka: d(), Z: d(), V: d(), ba: d(), Y: d(), U: d(), ha: d(), da: d() }, m = g;
e.c.b = function (a) {
    function k(a, l) { for (var f = 0; f < a.length; f++) if (a[f].id == l.e) { 0 == a[f].d.length && (a[f].d = []); a[f].d.push(l); break } else a[f].d instanceof Object && k(a[f].d, l) } function n(a) {
        j = 0 == j.length ? j + "<ul style='list-style-type:none;'>" : j + "<ul style='list-style-type:none; display:none;'>"; e(a).n(function () {
            var a, f = 20; a = "" + ("<li nodeid='" + this.id + "'>"); a += "<span class='ui-icon "; a = this.f != b && 0 < this.f.length ? a + this.f : this.d != b && 0 < this.d.length ? m.r ? a + m.m : a + m.l : a + m.B; a += "' data-action='nav_items' style='position:absolute; margin-top:1px;'></span>";
            if (this.i || this.i == b && m.I) a += "<input type='checkbox' style='position:absolute; margin-top:1px;margin-left:" + f + "px;'", this.o && (a += " disabled='true'"), a += "></input>", f += 20; if (this.h || this.h == b && m.H) a += "<span class='ui-icon " + m.A + "' data-action='add' style='position:absolute; margin-top:1px;margin-left:" + f + "px;'></span>", f += 20; if (this.j || this.j == b && m.J) a += "<span class='ui-icon " + m.C + "' data-action='remove' style='position:absolute; margin-top:1px;margin-left:" + f + "px;'></span>", f += 20; this.href && (a += "<a href='" +
            this.href + "' target='" + this.target + "'>"); a += "<span style='margin-left:" + f + "px;' data-action='text'>" + this.name + "</span>"; this.href && (a += "</a>"); j += a + "</li>"; this.d != b && 0 < this.d.length && n(this.d)
        }); j += "</ul>"
    } m = e.extend({}, g, a); var h = [], j = ""; if (m.url != b && 0 < m.url.length) { a = ""; switch (m.u) { case 1: a = "json"; break; case 2: a = "xml" } e.P({ type: "GET", async: m.async, url: m.url, dataType: a, ma: function (a) { m.dataset = a }, error: d() }) } switch (m.u) {
        case 1: switch (m.t) {
            case 1: e(m.dataset[0].root).n(function () {
                var a = {
                    id: this.id,
                    name: this.name, e: this.e, href: this.href, target: this.target, i: this.i, h: this.h, j: this.j, o: this.o, f: this.f, d: []
                }; 0 == h.length || 0 == a.e ? h.push(a) : k(h, a)
            }); break; case 2: h = m.dataset[0].root
        } break; case 2: switch (m.t) {
            case 1: e(m.dataset).find("node").n(function () {
                var a = {
                    id: e(this).a("id"), name: e(this).a("name"), e: e(this).a("parentid"), href: e(this).a("href"), target: e(this).a("target"), i: e(this).a("buttoncheck") == b ? c : e(this).a("buttoncheck"), h: e(this).a("buttonadd") == b ? c : e(this).a("buttonadd"), j: e(this).a("buttonremove") ==
                    b ? c : e(this).a("buttonremove"), o: e(this).a("isdisabled") == b ? c : e(this).a("isdisabled"), f: e(this).a("classnodeicon"), d: []
                }; 0 == h.length || 0 == a.e ? h.push(a) : k(h, a)
            }); break; case 2: e(m.dataset).find("node").n(function () {
                var a = {
                    id: e(this).a("id"), name: e(this).a("name"), e: e(this).parent().a("id") == b ? 0 : e(this).parent().a("id"), href: e(this).a("href"), target: e(this).a("target"), i: e(this).a("buttoncheck") == b ? c : e(this).a("buttoncheck"), h: e(this).a("buttonadd") == b ? c : e(this).a("buttonadd"), j: e(this).a("buttonremove") ==
                    b ? c : e(this).a("buttonremove"), o: e(this).a("isdisabled") == b ? c : e(this).a("isdisabled"), f: e(this).a("classnodeicon"), d: []
                }; 0 == h.length || 0 == a.e ? h.push(a) : k(h, a)
            })
        }
    } n(h); e("#" + m.s).append(j); a = e.c.b.k(); e.c.b.g(a); e.c.b.p(a); m.r && (e.c.b.g(a), e.c.b.p(a)); e("li span[data-action='nav_items']"); e("li span[data-action='text']"); e("li input[type='checkbox']"); e("li span[data-action='add']"); e("li span[data-action='remove']")
}; e.c.b.k = function () { return e("#" + m.s + "> ul > li > span:nth-child(1)") }; e.c.b.p = function (a) { e(a).parent().next("ul").toggle() };
e.c.b.g = function (a) { e(a).n(function () { e(this).D(m.m) ? (e(this).G(m.m), e(this).z(m.l)) : e(this).D(m.l) ? (e(this).G(m.l), e(this).z(m.m)) : e.T() }) }; e.c.b.q = function (a, k) { k ? e(a).parent().next("ul").F(":visible") || (e(a).parent().next("ul").show(), e.c.b.g(a)) : e(a).parent().next("ul").F(":visible") && (e(a).parent().next("ul").R(), e.c.b.g(a)) }; e.c.b.L = function () { var a = e.c.b.k(); e.c.b.q(a, !0) }; e.c.b.K = function () { var a = e.c.b.k(); e.c.b.q(a, c) }; e.c.b.N = function () { var a = e.c.b.k(); e.c.b.g(a); e.c.b.p(a) };
