var a = null, c = !1; function e() { return function () { } } var f = jQuery; $treedatatype = { q: 1, D: 2 }; $treedataformat = { C: 1, p: 2 };
var g = { m: a, url: a, async: c, dataset: a, o: $treedatatype.q, n: $treedataformat.p, h: "ui-icon-folder-collapsed", i: "ui-icon-folder-open", t: "ui-icon-document", l: c, H: "ui-state-highlight", s: "ui-icon-plusthick", u: "ui-icon-minusthick", A: c, z: c, B: c, J: "Are you sure you want to remove this node?", ca: e(), U: e(), Y: e(), W: e(), X: e(), R: e(), N: e(), aa: e(), $: e(), S: e(), O: e(), ba: e(), Q: e(), M: e(), T: e(), P: e(), L: e(), Z: e(), V: e() }, n = g;
f.I.G = function (j) {
    function m(b, d) { for (var l = 0; l < b.length; l++) if (b[l].id == d.c) { 0 == b[l].b.length && (b[l].b = []); b[l].b.push(d); break } else b[l].b instanceof Object && m(b[l].b, d) } function p(b) {
        k = 0 == k.length ? k + "<ul style='list-style-type:none;'>" : k + "<ul style='list-style-type:none; display:none;'>"; f(b).j(function () {
            var d, b = 20; d = "" + ("<li nodeid='" + this.id + "'>"); d += "<span class='ui-icon "; d = this.d != a && 0 < this.d.length ? d + this.d : this.b != a && 0 < this.b.length ? n.l ? d + n.i : d + n.h : d + n.t; d += "' data-action='nav_items' style='position:absolute; margin-top:1px;'></span>";
            if (this.f || this.f == a && n.A) d += "<input type='checkbox' style='position:absolute; margin-top:1px;margin-left:" + b + "px;'", this.k && (d += " disabled='true'"), d += "></input>", b += 20; if (this.e || this.e == a && n.z) d += "<span class='ui-icon " + n.s + "' data-action='add' style='position:absolute; margin-top:1px;margin-left:" + b + "px;'></span>", b += 20; if (this.g || this.g == a && n.B) d += "<span class='ui-icon " + n.u + "' data-action='remove' style='position:absolute; margin-top:1px;margin-left:" + b + "px;'></span>", b += 20; this.href && (d += "<a href='" +
            this.href + "' target='" + this.target + "'>"); d += "<span style='margin-left:" + b + "px;' data-action='text'>" + this.name + "</span>"; this.href && (d += "</a>"); k += d + "</li>"; this.b != a && 0 < this.b.length && p(this.b)
        }); k += "</ul>"
    } function q(b) { f(b).j(function () { f(this).v(n.i) ? (f(this).w(n.i), f(this).r(n.h)) : f(this).v(n.h) ? (f(this).w(n.h), f(this).r(n.i)) : f.K() }) } n = f.extend({}, g, j); var h = [], k = ""; if (n.url != a && 0 < n.url.length) {
        j = ""; switch (n.o) { case 1: j = "json"; break; case 2: j = "xml" } f.F({
            type: "GET", async: n.async, url: n.url, dataType: j,
            da: function (b) { n.dataset = b }, error: e()
        })
    } switch (n.o) {
        case 1: switch (n.n) { case 1: f(n.dataset[0].root).j(function () { var b = { id: this.id, name: this.name, c: this.c, href: this.href, target: this.target, f: this.f, e: this.e, g: this.g, k: this.k, d: this.d, b: [] }; 0 == h.length || 0 == b.c ? h.push(b) : m(h, b) }); break; case 2: h = n.dataset[0].root } break; case 2: switch (n.n) {
            case 1: f(n.dataset).find("node").j(function () {
                var b = {
                    id: f(this).a("id"), name: f(this).a("name"), c: f(this).a("parentid"), href: f(this).a("href"), target: f(this).a("target"),
                    f: f(this).a("buttoncheck") == a ? c : f(this).a("buttoncheck"), e: f(this).a("buttonadd") == a ? c : f(this).a("buttonadd"), g: f(this).a("buttonremove") == a ? c : f(this).a("buttonremove"), k: f(this).a("isdisabled") == a ? c : f(this).a("isdisabled"), d: f(this).a("classnodeicon"), b: []
                }; 0 == h.length || 0 == b.c ? h.push(b) : m(h, b)
            }); break; case 2: f(n.dataset).find("node").j(function () {
                var b = {
                    id: f(this).a("id"), name: f(this).a("name"), c: f(this).parent().a("id") == a ? 0 : f(this).parent().a("id"), href: f(this).a("href"), target: f(this).a("target"),
                    f: f(this).a("buttoncheck") == a ? c : f(this).a("buttoncheck"), e: f(this).a("buttonadd") == a ? c : f(this).a("buttonadd"), g: f(this).a("buttonremove") == a ? c : f(this).a("buttonremove"), k: f(this).a("isdisabled") == a ? c : f(this).a("isdisabled"), d: f(this).a("classnodeicon"), b: []
                }; 0 == h.length || 0 == b.c ? h.push(b) : m(h, b)
            })
        }
    } p(h); f("#" + n.m).append(k); j = f("#" + n.m + "> ul > li > span:nth-child(1)"); q(j); f(j).parent().next("ul").toggle(); n.l && (q(j), f(j).parent().next("ul").toggle()); f("li span[data-action='nav_items']"); f("li span[data-action='text']");
    f("li input[type='checkbox']"); f("li span[data-action='add']"); f("li span[data-action='remove']")
};
